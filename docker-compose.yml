version: '3'

services:
  db:
    container_name: db
    image: postgres:14-alpine
    restart: always
    env_file:
      - src/.env
    volumes:
      - db-data:/var/lib/postgresql/data
    expose:
      - 5432
    networks:
      - custom


  app:
    container_name: app
    image: app
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - src/.env
    volumes:
      - media_volume:/src/media
    expose:
      - 8000
    depends_on:
      - db
    networks:
      - custom


  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    expose:
      - 9090
    depends_on:
      - app
    networks:
      - custom


  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    volumes:
      - grafana-data:/var/lib/grafana
      - grafana-config:/etc/grafana
      - ./web/grafana.ini:/etc/grafana/grafana.ini
    expose:
      - 3000
    depends_on:
      - app
      - prometheus
    networks:
      - custom
    user: "0"


  redis:
    container_name: redis
    image: redis:alpine
    networks:
      - custom


  web:
    container_name: web
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - media_volume:/src/media
      - ./web/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
      - db
      - redis
      - prometheus
      - grafana
    networks:
      - custom


networks:
  custom:
    driver: bridge

volumes:
  db-data:
  grafana-data:
  grafana-config:
  prometheus-data:
  media_volume:
